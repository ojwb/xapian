skip_tags: true
# A full clone takes 30 seconds, depth 20 takes 5 seconds.
#
# Using "shallow_clone: true" downloads the commit as a ZIP file so you might
# think that would be quicker still, but actually it seems to take ~15 seconds,
# and then bootstrap fails due to there not being a ".git" directory.
clone_depth: 20
# Specify clone_folder so we can hard-code the Unix path equivalent below.
clone_folder: c:\projects\xapian
environment:
  global:
    AUTOMATED_TESTING: 1
  matrix:
  - TOOLCHAIN: mingw
    platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  - TOOLCHAIN: mingw64
    platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  - TOOLCHAIN: mingw64
    platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  - TOOLCHAIN: msvc
    platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    VCVARS_BAT: "\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvars32.bat\""
  - TOOLCHAIN: msvc
    platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    VCVARS_BAT: "\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\""
  - TOOLCHAIN: msvc
    platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    VCVARS_BAT: "\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars32.bat\""
  - TOOLCHAIN: msvc
    platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    VCVARS_BAT: "\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\""
  - TOOLCHAIN: msvc
    platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
    VCVARS_BAT: "\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars32.bat\""
  - TOOLCHAIN: msvc
    platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
    VCVARS_BAT: "\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\""
install:
  - ps: >-
      $env:CONFIGOPTS="--disable-documentation"
  - ps: >-
      if ($env:TOOLCHAIN -eq "mingw") {
        $env:PATH="C:\Mingw\bin;C:\Mingw\MSYS\1.0\bin;$env:PATH"
      } elseif ($env:TOOLCHAIN -eq "mingw64") {
        if ($env:Platform -eq "x86") {
          $env:PATH="C:\mingw-w64\i686-8.1.0-posix-dwarf-rt_v6-rev0\mingw32\bin;C:\msys64\usr\bin;$env:PATH"
          $env:CONFIGOPTS+=" --host=i686-pc-mingw32"
        } else {
          $env:PATH="C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin;C:\msys64\usr\bin;$env:PATH"
          $env:CONFIGOPTS+=" --host=x86_64-w64-mingw32"
        }
      } elseif ($env:TOOLCHAIN -eq "llvm") {
        $env:PATH="C:\Program Files\LLVM\bin;c:\msys64\usr\bin;$env:PATH"
      } else {
        $env:PATH="c:\msys64\usr\bin;$env:PATH"
      }
  - if "%TOOLCHAIN%"=="mingw" bash -c "echo 'c:/mingw /mingw' >> /etc/fstab"
  - if "%TOOLCHAIN%"=="mingw" appveyor-retry bash -c 'mingw-get install libz-dev'
  - if "%TOOLCHAIN%"=="mingw64" appveyor-retry bash -c 'pacman -Sy --noconfirm zlib-devel'
  - bash -c 'time ./bootstrap --fetch-url-command="curl --retry 5 --retry-connrefused -L" xapian-core'
  - if defined VCVARS_BAT call %VCVARS_BAT%
  - if "%TOOLCHAIN%"=="msvc" mkdir zlib
  - if "%TOOLCHAIN%"=="msvc" cd zlib
  - if "%TOOLCHAIN%"=="msvc" bash -c 'curl --retry 5 --retry-connrefused -L https://github.com/xapian/xapian-dev-deps/releases/download/current/zlib-1.2.13.tar.gz|tar --strip-components=1 -zxf -'
  # Don't build zlib with -MD as it seems this flag needs to be used
  # consistently across the build.
  - if "%TOOLCHAIN%"=="msvc" sed -i 's/\(^CFLAGS  *= *-nologo \)-MD /\1/' win32/Makefile.msc
  # Don't build zlib with a fixed base address on x64 as that gives linker
  # warning LNK4281.
  - if "%TOOLCHAIN%-%Platform%"=="msvc-x64" sed -i 's/-base:0x[0-9A-Fa-f]* //' win32/Makefile.msc
  - if "%TOOLCHAIN%"=="msvc" nmake -nologo -f win32\Makefile.msc
  - if "%TOOLCHAIN%"=="msvc" cd ..
  # Fetch pre-built unicode-data.cc to avoid having to get working tclsh.
  - curl --retry 5 --retry-connrefused https://oligarchy.co.uk/xapian/patches/unicode-data15.cc > xapian-core\unicode\unicode-data.cc
  - ps: >-
      if ($env:TOOLCHAIN -eq "msvc") {
        $env:CC="cl -nologo"
        $env:CXX="c:/projects/xapian/INST/share/automake-1.16/compile cl -nologo"
        $env:CXXFLAGS="-EHsc"
        $env:CPPFLAGS="-Ic:/projects/xapian/zlib"
        $env:AR="lib"
        $env:LDFLAGS="-Lc:/projects/xapian/zlib"
      }
build_script:
  - bash -c 'time ./configure $CONFIGOPTS'
  - bash -c 'time make -j2' < nul
test_script:
  - bash -c 'time make check VERBOSE=1' < nul
