skip_tags: true
clone_depth: 1
# Specify clone_folder so we can hard-code the Unix path equivalent below.
clone_folder: c:\projects\xapian
environment:
  matrix:
  - platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
  - platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
  - platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
  - platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
  - platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  - platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  - platform: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
  - platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
build_script:
  - echo ____________________________________________
  - dir C:\mingw
  - bash -c "find c:/mingw -iname 'g++*.exe' -ls||true"
  - bash -c "find /mingw -iname 'g++*.exe' -ls||true"
  - bash -c "find /c/mingw -iname 'g++*.exe' -ls||true"
  - echo ____________________________________________
  - dir C:\cygwin
  - bash -c "find c:/cygwin -iname 'g++*.exe' -ls||true"
  - bash -c "find /cygwin -iname 'g++*.exe' -ls||true"
  - bash -c "find /c/cygwin -iname 'g++*.exe' -ls||true"
  - dir C:\cygwin64
  - bash -c "find c:/cygwin64 -iname 'g++*.exe' -ls||true"
  - bash -c "find /cygwin64 -iname 'g++*.exe' -ls||true"
  - bash -c "find /c/cygwin64 -iname 'g++*.exe' -ls||true"
  - echo ____________________________________________
  - dir C:\mingw64
  - bash -c "find c:/mingw64 -iname 'g++*.exe' -ls||true"
  - bash -c "find /mingw64 -iname 'g++*.exe' -ls||true"
  - bash -c "find /c/mingw64 -iname 'g++*.exe' -ls||true"
  - echo ____________________________________________
