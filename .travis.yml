# Use "dist: trusty" for now - while it's a bit old, it serves as a useful
# check that things still work with older versions of compilers and other
# tools.
dist: trusty
language: cpp
notifications:
  irc: "chat.freenode.net#xapian-devel"
env:
  global:
    # Tell bootstrap where to clone ./common from
    - XAPIAN_COMMON_CLONE_URL=https://github.com/xapian/xapian.git
    - HOMEBREW_PACKAGES='doxygen help2man graphviz pngcrush libiconv libmagic pcre libsvm lua mono python2 python'
matrix:
  include:
    - os: linux
      sudo: required
      addons:
        apt:
          packages:
            - doxygen
            - graphviz
            - help2man
            - python-docutils
            - python-pygments
            - pngcrush
      language: node_js
      node_js:
        - node
      services:
        - docker
      before_script:
        # Bootstrap only xapian-core for emscripten build.
        - ./bootstrap xapian-core
        - ./configure CXXFLAGS=-O0 --disable-backend-honey --disable-backend-inmemory --disable-backend-remote
        - make -j2
        - make -j2 distclean
        - cd xapian-core
        - docker run -v $(pwd):/src trzeci/emscripten emconfigure ./configure CPPFLAGS='-DFLINTLOCK_USE_FLOCK' CXXFLAGS='-Oz -s USE_ZLIB=1 -fno-exceptions -fno-rtti' --disable-backend-honey --disable-backend-inmemory --disable-shared --disable-backend-remote
      script:
        - docker run -v $(pwd):/src trzeci/emscripten emmake make
        - docker run -v $(pwd):/src trzeci/emscripten em++ -Oz -std=c++11 -s WASM=1 -Iinclude emscripten/xapianjstest.cc .libs/libxapian-1.5.a -o emscripten/xapianjstest.js
        - ls -l .libs emscripten
        - cd emscripten && node xapianjstest.js


before_script:
  # Bootstrap everything (including letor, which isn't done
  # by default), then configure using our chosen compiler.
  - ./bootstrap xapian-core xapian-applications/omega swig xapian-bindings xapian-letor
  - ./configure $confargs CC="$USE_CC" CXX="$USE_CXX"
script:
  - make
  - $installcore
  - make check VERBOSE=1 AUTOMATED_TESTING=1
  # grep '^' passes through all input while giving a non-zero exit status if
  # that input is empty.
  - git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true
