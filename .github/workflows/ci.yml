name: CI

on:
  push:
    paths-ignore:
      - '.appveyor.yml'
      - NEWS
      - 'xapian-maintainer-tools/**'
  pull_request:
    branches: master
    paths-ignore:
      - '.appveyor.yml'
      - NEWS
      - 'xapian-maintainer-tools/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  makedist:
    name: 'make dist'
    runs-on: 'ubuntu-latest'
    env:
      LIBEXTRACTOR_PREFIX: '/usr/lib/x86_64-linux-gnu/libextractor'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: makedist
    - name: Install package dependencies
      run: |
        sudo apt-get update
        sudo apt-get install \
            doxygen \
            graphviz \
            help2man \
            python3-docutils \
            pngcrush \
            python3-sphinx \
            uuid-dev \
            libpcre2-dev \
            libmagic-dev \
            lua5.4 \
            liblua5.4-dev \
            mono-devel \
            python3-dev \
            tcl \
            tcl-dev \
            libicu-dev \
            pkg-config \
            libpoppler-glib-dev \
            libglib2.0-dev \
            libe-book-dev \
            libetonyek-dev \
            libgepub-0.6-dev \
            libgmime-3.0-dev \
            libarchive-dev \
            libabw-dev \
            libcdr-dev \
            libextractor-dev \
            libextractor-plugins-all \
            libmwaw-dev \
            libreofficekit-dev libreoffice-calc libreoffice-draw libreoffice-impress libreoffice-writer \
            libtesseract-dev \
            tesseract-ocr-eng
    - name: bootstrap source tree
      run: |
        echo verbose=off > ~/.wgetrc
        ./bootstrap xapian-core xapian-applications/omega swig xapian-bindings xapian-letor
    - name: configure
      run: ./configure
    - name: make
      run: make -j2
#    - name: Run tests
#      run: make -j2 check VERBOSE=1 AUTOMATED_TESTING=1
    - name: Create distribution tarball
      run: |
        make dist
    - uses: actions/upload-artifact@v3
      with:
        path: |
          xapian-core/xapian-core-*.tar.xz
          xapian-applications/omega/xapian-omega-*.tar.xz
          xapian-bindings/xapian-bindings-*.tar.xz
          xapian-letor/xapian-letor-*.tar.xz
        retention-days: 1
        if-no-files-found: error
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true

  windows:
    runs-on: 'windows-latest'
    needs: makedist
    steps:
    - name: Fetch distribution
      uses: actions/download-artifact@v3
    - name: Unpack distribution
      shell: bash
      run: |
        mv artifact/* .
        rmdir artifact
        pushd xapian-core
        tar --strip-components=1 -xf xapian-core-*.tar.xz
        popd
        pushd xapian-applications/omega
        tar --strip-components=1 -xf xapian-omega-*.tar.xz
        popd
        pushd xapian-bindings
        tar --strip-components=1 -xf xapian-bindings-*.tar.xz
        popd
        pushd xapian-letor
        tar --strip-components=1 -xf xapian-letor-*.tar.xz
        popd
    - name: Set up Visual Studio shell
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64
    - name: Install package dependencies
      run: |
        choco install make
    - name: configure
      shell: bash
      run: |
        pushd xapian-core
        ./configure CC='cl -nologo' CXX='ccache g++'
        popd
        pushd xapian-applications/omega
        ./configure CC='cl -nologo' CXX='ccache g++' XAPIAN_CONFIG=../../xapian-core/xapian-config
        popd
        pushd xapian-bindings
        ./configure CC='cl -nologo' CXX='ccache g++' XAPIAN_CONFIG=../xapian-core/xapian-config
        popd
        pushd xapian-letor
        ./configure CC='cl -nologo' CXX='ccache g++' XAPIAN_CONFIG=../xapian-core/xapian-config
        popd
    - name: make
      shell: bash
      run: |
        make -j2 -C xapian-core
        make -j2 -C xapian-applications/omega
        make -j2 -C xapian-bindings
        make -j2 -C xapian-letor
    - name: Run tests
      shell: bash
      run: |
        make -j2 -C xapian-core check VERBOSE=1 AUTOMATED_TESTING=1
        make -j2 -C xapian-applications/omega check VERBOSE=1 AUTOMATED_TESTING=1
        make -j2 -C xapian-bindings check VERBOSE=1 AUTOMATED_TESTING=1
        make -j2 -C xapian-letor check VERBOSE=1 AUTOMATED_TESTING=1
